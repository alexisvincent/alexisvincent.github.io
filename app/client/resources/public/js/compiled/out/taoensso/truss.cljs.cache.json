["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ ","~$-invariant","~$taoensso.truss.impl"],"~:excludes",["~#set",[]],"~:name","~$taoensso.truss","~:imports",null,"~:requires",["^ ","~$impl","^4","^4","^4"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$get-dynamic-assertion-data",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/alexisvincent/Code/alexisvincent.io/client/resources/public/js/compiled/out/taoensso/truss.cljs","~:line",117,"~:column",7,"~:end-line",117,"~:end-column",33,"~:arglists",["~#list",["~$quote",["^H",[[]]]]],"~:doc","Returns current value of dynamic assertion data"],"^7","~$taoensso.truss/get-dynamic-assertion-data","~:variadic",false,"^B","resources/public/js/compiled/out/taoensso/truss.cljs","^F",33,"~:method-params",["^H",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^H",[null,null]],"^D",1,"^C",117,"^E",117,"~:max-fixed-arity",0,"~:fn-var",true,"^G",["^H",["^I",["^H",[[]]]]],"^J","Returns current value of dynamic assertion data"],"~$-error-fn",["^ ","^@",null,"^A",["^ ","^B","/Users/alexisvincent/Code/alexisvincent.io/client/resources/public/js/compiled/out/taoensso/truss.cljs","^C",128,"^D",8,"^E",128,"^F",17,"~:private",true,"^G",["^H",["^I",["^H",[["~$f"]]]]]],"^S",true,"^7","~$taoensso.truss/-error-fn","^L",false,"^B","resources/public/js/compiled/out/taoensso/truss.cljs","^F",17,"^M",["^H",[["~$f"]]],"^N",null,"^O",["^H",[null,null]],"^D",1,"^C",128,"^E",128,"^P",1,"^Q",true,"^G",["^H",["^I",["^H",[["~$f"]]]]]],"~$set-error-fn!",["^ ","^@",null,"^A",["^ ","^B","/Users/alexisvincent/Code/alexisvincent.io/client/resources/public/js/compiled/out/taoensso/truss.cljs","^C",133,"^D",7,"^E",133,"^F",20,"^G",["^H",["^I",["^H",[["~$f"]]]]],"^J","Sets the root (fn [msg data-map]) called on invariant violations.\n  Defaults to (fn [msg data-map] (throw (ex-info msg data-map)))."],"^7","~$taoensso.truss/set-error-fn!","^L",false,"^B","resources/public/js/compiled/out/taoensso/truss.cljs","^F",20,"^M",["^H",[["~$f"]]],"^N",null,"^O",["^H",[null,null]],"^D",1,"^C",133,"^E",133,"^P",1,"^Q",true,"^G",["^H",["^I",["^H",[["~$f"]]]]],"^J","Sets the root (fn [msg data-map]) called on invariant violations.\n  Defaults to (fn [msg data-map] (throw (ex-info msg data-map)))."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^;","^4","^4","^4"],"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:default"]],"~:order",["^["]],"^J","An opinionated assertions API for Clojure/Script"]