{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{}, :name client.data, :imports nil, :requires {d datascript.core, datascript.core datascript.core, walk clojure.walk, clojure.walk clojure.walk, r reagent.core, reagent.core reagent.core}, :cljs.spec/speced-vars [], :uses nil, :defs {bind {:protocol-inline nil, :meta {:file "/Users/alexisvincent/Code/alexisvincent.github.io/app/src/client/data.cljs", :line 6, :column 7, :end-line 6, :end-column 11, :arglists (quote ([conn q] [conn q state])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([conn q] [conn q state]), :arglists ([conn q] [conn q state]), :arglists-meta (nil nil)}}, :name client.data/bind, :variadic false, :file "src/client/data.cljs", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([conn q] [conn q state]), :arglists ([conn q] [conn q state]), :arglists-meta (nil nil)}, :method-params ([conn q] [conn q state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 3, :fn-var true, :arglists ([conn q] [conn q state])}, unbind {:protocol-inline nil, :meta {:file "/Users/alexisvincent/Code/alexisvincent.github.io/app/src/client/data.cljs", :line 19, :column 7, :end-line 19, :end-column 13, :arglists (quote ([conn state]))}, :name client.data/unbind, :variadic false, :file "src/client/data.cljs", :end-column 13, :method-params ([conn state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([conn state]))}, conn {:name client.data/conn, :file "src/client/data.cljs", :line 23, :column 1, :end-line 23, :end-column 10, :meta {:file "/Users/alexisvincent/Code/alexisvincent.github.io/app/src/client/data.cljs", :line 23, :column 6, :end-line 23, :end-column 10}, :tag any}, reactive-q {:name client.data/reactive-q, :file "src/client/data.cljs", :line 25, :column 1, :end-line 25, :end-column 16, :meta {:file "/Users/alexisvincent/Code/alexisvincent.github.io/app/src/client/data.cljs", :line 25, :column 6, :end-line 25, :end-column 16}, :tag any}}, :cljs.spec/registry-ref [], :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:find ?a :where :age :db-after :name :surname :tx-data ?v ?e}, :order [:tx-data :db-after :name :age :surname :find ?e ?a ?v :where]}, :doc nil}